{"version":3,"file":"32aeec0a4b197de17b51a3ba3403e47245260277-9851f2f23779bfba5b17.js","mappings":"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","sources":["webpack://janpia-disclosure/./src/styles/sidebar.ts","webpack://janpia-disclosure/./src/features/search/component/sidebar/molecules/FreewordCard.tsx","webpack://janpia-disclosure/./src/features/search/component/sidebar/Organization/SidebarPrefectures.tsx","webpack://janpia-disclosure/./src/features/search/component/sidebar/molecules/SearchCategoryCard.tsx","webpack://janpia-disclosure/./src/features/search/component/sidebar/molecules/ParameterCard.tsx","webpack://janpia-disclosure/./src/components/organisms/SearchSideBar.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Issue/SocialIssue.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Organization/LegalPersonality.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Organization/OrganizationName.tsx","webpack://janpia-disclosure/./src/hooks/useDebounce.ts","webpack://janpia-disclosure/./src/features/search/component/main/Organization/OrganizationTypeCd.tsx"],"sourcesContent":["import tw from \"twin.macro\";\n\nexport const sidebarCard = tw`rounded border-blue-font border-2`;\nexport const sidebarHeading = tw`text-white p-2 bg-blue-font`;\n","import React from \"react\";\nimport SearchBoxSidebar from \"../Freeword/SearchBoxSidebar\";\nimport AlgoliaIndex from \"../../../api/AlgoliaIndex\";\nimport tw from \"twin.macro\";\nimport \"twin.macro\";\nimport { sidebarCard, sidebarHeading } from \"../../../../../styles/sidebar\";\n\nconst FreewordCard = () => {\n  return (\n    <div css={sidebarCard}>\n      <p css={sidebarHeading} tw=\"text-sm\">\n        フリーワードから探す\n      </p>\n      <div tw=\"p-2.5\">\n        <AlgoliaIndex path=\"result\" />\n      </div>\n    </div>\n  );\n};\n\nexport default FreewordCard;\n","import React from \"react\";\nimport \"twin.macro\";\nimport { h3, vCenter } from \"../../../../../styles/base\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { useModalContext } from \"../../../../../context/modalContext\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\n\nconst SidebarPrefectures = (props: { category: string }) => {\n  const { setIsModalOpen } = useModalContext();\n  const { searchState } = useSearchContext();\n  const { prefectures, target_area } = searchState;\n  const prefecturesText =\n    props.category === \"prefectures\"\n      ? prefectures.join(\" / \")\n      : target_area.join(\" / \");\n\n  return (\n    <div tw=\"lg:hidden\">\n      <h3 css={h3}>\n        {props.category === \"prefectures\" ? \"団体所在地\" : \"事業対象地域\"}\n      </h3>\n      <div tw=\"px-3.5 py-2.5\">\n        <p>選択した地域：{prefecturesText}</p>\n        <button\n          css={vCenter}\n          tw=\"mt-3 border border-blue-button rounded py-2.5 w-full\"\n          onClick={() => {\n            props.category === \"prefectures\"\n              ? setIsModalOpen(\"prefectures\")\n              : setIsModalOpen(\"targetArea\");\n          }}\n        >\n          <div tw=\"flex gap-2.5\">\n            <StaticImage\n              src=\"../../../../../images/map-icon.svg\"\n              alt=\"マップアイコン\"\n              tw=\"w-[21.65px]\"\n            />\n            <p tw=\"text-blue-button font-bold\">\n              {props.category === \"prefectures\" ? \"団体所在地\" : \"活動地域\"}\n              を選択する\n            </p>\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarPrefectures;\n","import { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport \"twin.macro\";\nimport { hCenter } from \"../../../../../styles/base\";\nimport tw from \"twin.macro\";\nimport OrganizationName from \"../../main/Organization/OrganizationName\";\nimport OrganizationTypeCd from \"../../main/Organization/OrganizationTypeCd\";\nimport LegalPersonality from \"../../main/Organization/LegalPersonality\";\nimport BusinessOrgType from \"../../main/Business/BusinessOrgType\";\nimport BusinessCategory from \"../../main/Business/BusinessCategory\";\nimport BusinessStatus from \"../../main/Business/BusinessStatus\";\nimport SubsidyAmount from \"../../main/Business/SubsidyAmount\";\nimport SocialIssue from \"../../main/Issue/SocialIssue\";\nimport SidebarPrefectures from \"../Organization/SidebarPrefectures\";\nimport BusinessTypeName from \"../../main/Business/BusinessTypeName\";\nimport { useLocation } from \"@reach/router\";\nimport PrefecturesSp from \"../../main/Organization/PrefecturesSp\";\n\nconst SearchCategoryCard = (props: { category: string }) => {\n  const [isOpen, setIsOpen] = useState(true);\n  const location = useLocation();\n  const path = location.pathname;\n\n  let categoryName = \"\";\n  if (props.category === \"organization\") {\n    categoryName = \"団体\";\n  } else if (props.category === \"project\") {\n    categoryName = \"事業\";\n  } else {\n    categoryName = \"社会課題\";\n  }\n\n  return (\n    <div>\n      <button\n        tw=\"bg-blue-button text-white justify-between w-full p-2 text-sm\"\n        css={hCenter}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <p tw=\"text-sm\">{categoryName}から探す</p>\n        <FontAwesomeIcon icon={faAngleDown} css={isOpen && tw`rotate-180`} />\n      </button>\n      {props.category === \"organization\" && (\n        <div\n          css={!isOpen && tw`h-0 overflow-hidden`}\n          tw=\"transition-[height] duration-300 ease-in\"\n        >\n          <OrganizationName path={path} />\n          <OrganizationTypeCd path={path} />\n          <SidebarPrefectures category=\"prefectures\" />\n          <PrefecturesSp category=\"prefectures\" />\n          <LegalPersonality path={path} />\n        </div>\n      )}\n      {props.category === \"project\" && (\n        <div\n          css={!isOpen && tw`h-0 overflow-hidden`}\n          tw=\"transition-[height] duration-300 ease-in\"\n        >\n          <BusinessTypeName path={path} />\n          <BusinessOrgType path={path} />\n          <BusinessCategory path={path} />\n          <SubsidyAmount path={path} />\n          <BusinessStatus path={path} />\n          <SidebarPrefectures category=\"targetArea\" />\n          <PrefecturesSp category=\"targetArea\" />\n        </div>\n      )}\n      {props.category === \"issue\" && (\n        <div\n          css={!isOpen && tw`h-0 overflow-hidden`}\n          tw=\"transition-[height] duration-300 ease-in\"\n        >\n          <SocialIssue />\n          {/* <SdgsGoal path=\"result\" /> */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchCategoryCard;\n","import React from \"react\";\nimport { sidebarCard, sidebarHeading } from \"../../../../../styles/sidebar\";\nimport \"twin.macro\";\nimport SearchCategoryCard from \"./SearchCategoryCard\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport { vCenter } from \"../../../../../styles/base\";\nimport { Link } from \"gatsby\";\n\nconst ParameterCard = () => {\n  return (\n    <div css={sidebarCard} tw=\"mt-2.5\">\n      <p css={sidebarHeading} tw=\"text-sm\">\n        検索条件から探す\n      </p>\n      <SearchCategoryCard category=\"organization\" />\n      <SearchCategoryCard category=\"project\" />\n      <SearchCategoryCard category=\"issue\" />\n\n      <div tw=\" hidden lg:(block p-4)\" css={vCenter}>\n        <Link\n          to=\"/result/\"\n          tw=\"w-full bg-blue-button text-white py-2 text-center block rounded\"\n        >\n          <FontAwesomeIcon icon={faMagnifyingGlass} tw=\"mr-3\" />\n          検索\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ParameterCard;\n","import React from \"react\";\nimport \"twin.macro\";\nimport FreewordCard from \"../../features/search/component/sidebar/molecules/FreewordCard\";\nimport ParameterCard from \"../../features/search/component/sidebar/molecules/ParameterCard\";\nimport ResetSearchButton from \"../atoms/ResetSearchButton\";\nimport { vCenter } from \"../../styles/base\";\n\nconst SearchSideBar = () => {\n  return (\n    <div tw=\"w-[300px] lg:(w-full)\">\n      <FreewordCard />\n      <ParameterCard />\n      <div css={vCenter} tw=\"mt-4\">\n        <ResetSearchButton />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchSideBar;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { socialIssueArray } from \"../../../store/filterContents\";\nimport * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport \"twin.macro\";\nimport { checkBox, checkBoxList, checkMark } from \"../../../../../styles/form\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport tw from \"twin.macro\";\n\nconst SocialIssue = () => {\n  const { searchState, searchSetState } = useSearchContext();\n  const isFirstRegionRender = useRef(true);\n  const isFirstAllFieldRender = useRef(true);\n\n  const {\n    field1_1,\n    field1_2,\n    field1_3,\n    field2_4,\n    field2_5,\n    field2_6,\n    field3_7,\n    field3_8,\n    region1,\n    region2,\n    region3,\n    allFieldCheck,\n  } = searchState;\n  const {\n    setField1_1,\n    setField1_2,\n    setField1_3,\n    setField2_4,\n    setField2_5,\n    setField2_6,\n    setField3_7,\n    setField3_8,\n    setRegion1,\n    setRegion2,\n    setRegion3,\n    setAllFieldCheck,\n  } = searchSetState;\n  const checkboxArray = socialIssueArray;\n\n  const handleCheckbox = (code: string) => {\n    code === \"field1_1\" && setField1_1(!field1_1);\n    code === \"field1_2\" && setField1_2(!field1_2);\n    code === \"field1_3\" && setField1_3(!field1_3);\n    code === \"field2_4\" && setField2_4(!field2_4);\n    code === \"field2_5\" && setField2_5(!field2_5);\n    code === \"field2_6\" && setField2_6(!field2_6);\n    code === \"field3_7\" && setField3_7(!field3_7);\n    code === \"field3_8\" && setField3_8(!field3_8);\n    code === \"region1\" && setRegion1(!region1);\n    code === \"region2\" && setRegion2(!region2);\n    code === \"region3\" && setRegion3(!region3);\n  };\n\n  const isChecked = (code: string) => {\n    switch (code) {\n      case \"field1_1\":\n        return field1_1;\n      case \"field1_2\":\n        return field1_2;\n      case \"field1_3\":\n        return field1_3;\n      case \"field2_4\":\n        return field2_4;\n      case \"field2_5\":\n        return field2_5;\n      case \"field2_6\":\n        return field2_6;\n      case \"field3_7\":\n        return field3_7;\n      case \"field3_8\":\n        return field3_8;\n      case \"region1\":\n        return region1;\n      case \"region2\":\n        return region2;\n      case \"region3\":\n        return region3;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    if (isFirstRegionRender.current) {\n      isFirstRegionRender.current = false;\n      return;\n    }\n\n    setField1_1(region1);\n    setField1_2(region1);\n    setField1_3(region1);\n    setField2_4(region2);\n    setField2_5(region2);\n    setField2_6(region2);\n    setField3_7(region3);\n    setField3_8(region3);\n  }, [region1, region2, region3]);\n\n  useEffect(() => {\n    if (isFirstAllFieldRender.current) {\n      isFirstAllFieldRender.current = false;\n      return;\n    }\n\n    setField1_1(allFieldCheck);\n    setField1_2(allFieldCheck);\n    setField1_3(allFieldCheck);\n    setField2_4(allFieldCheck);\n    setField2_5(allFieldCheck);\n    setField2_6(allFieldCheck);\n    setField3_7(allFieldCheck);\n    setField3_8(allFieldCheck);\n  }, [allFieldCheck]);\n\n  useEffect(() => {\n    setRegion1(field1_1 && field1_2 && field1_3);\n    setRegion2(field2_4 && field2_5 && field2_6);\n    setRegion3(field3_7 && field3_8);\n    // setAllFieldCheck(\n    //   field1_1 &&\n    //     field1_2 &&\n    //     field1_3 &&\n    //     field2_4 &&\n    //     field2_5 &&\n    //     field2_6 &&\n    //     field3_7 &&\n    //     field3_8\n    // );\n  }, [\n    field1_1,\n    field1_2,\n    field1_3,\n    field2_4,\n    field2_5,\n    field2_6,\n    field3_7,\n    field3_8,\n  ]);\n\n  return (\n    <div>\n      <h3 css={h3}>社会課題</h3>\n      <div tw=\"flex flex-col gap-2.5 px-3.5 py-2.5\">\n        <div tw=\"mt-[5px]\">\n          <div css={hCenter} tw=\"gap-2\">\n            <Checkbox.Root\n              id=\"allIssue\"\n              onCheckedChange={() => setAllFieldCheck(!allFieldCheck)}\n              css={checkBox}\n              checked={allFieldCheck}\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor=\"allIssue\">すべてにチェック</label>\n          </div>\n        </div>\n        {checkboxArray.map((checkbox) => (\n          <div\n            key={checkbox.code}\n            css={checkbox.code.includes(\"field\") ? tw`ml-[30px]` : tw`mt-[5px]`}\n          >\n            <div css={hCenter} tw=\"gap-2\">\n              <Checkbox.Root\n                id={checkbox.code}\n                onCheckedChange={() => handleCheckbox(checkbox.code)}\n                css={checkBox}\n                checked={isChecked(checkbox.code)}\n              >\n                <Checkbox.Indicator tw=\"flex justify-center\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"15.003\"\n                    height=\"11.252\"\n                    viewBox=\"0 0 15.003 11.252\"\n                    css={checkMark}\n                  >\n                    <path\n                      id=\"check\"\n                      d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                      transform=\"translate(-294.999 -123.908)\"\n                    />\n                  </svg>\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n              <label htmlFor={checkbox.code}>{checkbox.label}</label>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SocialIssue;\n","import * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport React from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport { legalPersonalityArray } from \"../../../store/filterContents\";\nimport { checkBox, checkBoxSet, checkMark } from \"../../../../../styles/form\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport \"twin.macro\";\nimport tw from \"twin.macro\";\n\nconst legalPersonalityLabelArray = [\n  { code: [1, 2], label: \"NPO法人\" },\n  { code: [12], label: \"株式会社\" },\n  { code: [3, 7], label: \"社団法人\" },\n  { code: [4, 8], label: \"財団法人\" },\n  { code: [20], label: \"社会福祉法人\" },\n  { code: [14], label: \"更生保護法人\" },\n  { code: [24], label: \"任意団体\" },\n  { code: [99], label: \"その他\" },\n];\n\nconst LegalPersonality = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { legal_personality } = searchState;\n  const { setLegalPersonality } = searchSetState;\n  const checkboxArray = legalPersonalityArray;\n\n  const handleCheckbox = (code: number[]) => {\n    if (legal_personality.includes(code[0])) {\n      setLegalPersonality(legal_personality.filter((lp) => !code.includes(lp)));\n    } else {\n      setLegalPersonality([...legal_personality, ...code]);\n    }\n  };\n\n  return (\n    <div>\n      <h3 css={h3}>法人格</h3>\n      <div\n        tw=\"flex gap-y-2.5 flex-wrap px-3.5 py-2.5\"\n        css={props.path.includes(\"/search/\") ? tw`gap-x-14` : tw`gap-x-3`}\n      >\n        {legalPersonalityLabelArray.map((checkbox) => (\n          <div key={checkbox.label} css={[hCenter, checkBoxSet]}>\n            <Checkbox.Root\n              id={String(checkbox.code)}\n              onCheckedChange={() => handleCheckbox(checkbox.code)}\n              css={checkBox}\n              checked={legal_personality.includes(checkbox.code[0])}\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor={String(checkbox.code)} tw=\"\">\n              {checkbox.label}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LegalPersonality;\n","import React, { useEffect, useState } from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport { textField, textFieldSide } from \"../../../../../styles/form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-regular-svg-icons\";\nimport \"twin.macro\";\nimport { h3 } from \"../../../../../styles/base\";\nimport { navigate } from \"gatsby\";\nimport { useDebounce } from \"../../../../../hooks/useDebounce\";\n\nconst OrganizationName = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { organization_name } = searchState;\n  const { setOrganizationName } = searchSetState;\n  const [organizationNameInput, setOrganizationNameInput] =\n    useState(organization_name);\n  const [isComposing, setIsComposing] = useState(false);\n  const debouncedOrganizationName = useDebounce(organizationNameInput, 500);\n\n  useEffect(() => {\n    setOrganizationName(debouncedOrganizationName);\n  }, [debouncedOrganizationName]);\n\n  const handleEnterKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\" && !isComposing) {\n      navigate(\"/result\");\n    }\n  };\n\n  return (\n    <div>\n      <h3 css={h3}>団体名</h3>\n      <div tw=\"relative px-3.5 py-2.5\">\n        <input\n          type=\"text\"\n          css={props.path.includes(\"search\") ? textField : textFieldSide}\n          placeholder=\"団体名を入力してください\"\n          value={organizationNameInput}\n          onChange={(e) => setOrganizationNameInput(e.target.value)}\n          onKeyDown={handleEnterKeyDown}\n          onCompositionStart={() => setIsComposing(true)}\n          onCompositionEnd={() => setIsComposing(false)}\n        />\n        <button\n          tw=\"absolute top-1/2 transform -translate-y-1/2 right-8\"\n          onClick={() => setOrganizationNameInput(\"\")}\n        >\n          <FontAwesomeIcon icon={faCircleXmark} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OrganizationName;\n","import { useEffect, useState } from \"react\";\n\nexport const useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","import * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport React from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport { OrganizationTypeCdArray } from \"../../../store/filterContents\";\nimport \"twin.macro\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport {\n  checkBox,\n  checkBoxList,\n  checkBoxSet,\n  checkMark,\n} from \"../../../../../styles/form\";\nimport tw from \"twin.macro\";\n\nconst OrganizationTypeCd = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { organization_type_cd } = searchState;\n  const { setOrganizationTypeCd } = searchSetState;\n  const checkboxArray = OrganizationTypeCdArray;\n\n  const handleCheckbox = (code: string) => {\n    if (organization_type_cd.includes(code)) {\n      setOrganizationTypeCd(organization_type_cd.filter((otc) => otc !== code));\n    } else {\n      setOrganizationTypeCd([...organization_type_cd, code]);\n    }\n  };\n\n  return (\n    <div>\n      <h3 css={h3}>団体種別</h3>\n      <div\n        tw=\"flex gap-y-2.5 flex-wrap px-3.5 py-2.5\"\n        css={props.path.includes(\"search\") ? tw`gap-x-14` : tw`gap-x-3`}\n      >\n        {checkboxArray.map((checkbox) => (\n          <div key={checkbox.code} css={[hCenter, checkBoxSet]}>\n            <Checkbox.Root\n              id={checkbox.code}\n              onCheckedChange={() => handleCheckbox(checkbox.code)}\n              css={checkBox}\n              checked={organization_type_cd.includes(checkbox.code)}\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor={checkbox.code}>{checkbox.label}</label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default OrganizationTypeCd;\n"],"names":["sidebarCard","sidebarHeading","___EmotionJSX","AlgoliaIndex","path","props","setIsModalOpen","useModalContext","searchState","useSearchContext","prefectures","target_area","prefecturesText","category","join","onClick","StaticImage","src","alt","h3","vCenter","isOpen","setIsOpen","useState","useLocation","pathname","categoryName","icon","faAngleDown","OrganizationName","OrganizationTypeCd","SidebarPrefectures","PrefecturesSp","LegalPersonality","BusinessTypeName","BusinessOrgType","BusinessCategory","SubsidyAmount","BusinessStatus","SocialIssue","hCenter","SearchCategoryCard","Link","to","FontAwesomeIcon","faMagnifyingGlass","FreewordCard","ParameterCard","ResetSearchButton","searchSetState","isFirstRegionRender","useRef","isFirstAllFieldRender","field1_1","field1_2","field1_3","field2_4","field2_5","field2_6","field3_7","field3_8","region1","region2","region3","allFieldCheck","setField1_1","setField1_2","setField1_3","setField2_4","setField2_5","setField2_6","setField3_7","setField3_8","setRegion1","setRegion2","setRegion3","setAllFieldCheck","checkboxArray","socialIssueArray","isChecked","code","useEffect","current","id","onCheckedChange","checked","Checkbox","xmlns","width","height","viewBox","d","transform","htmlFor","map","checkbox","key","includes","handleCheckbox","label","checkBox","checkMark","legalPersonalityLabelArray","legal_personality","setLegalPersonality","legalPersonalityArray","checkBoxSet","String","filter","lp","organization_name","setOrganizationName","organizationNameInput","setOrganizationNameInput","isComposing","setIsComposing","debouncedOrganizationName","value","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","type","placeholder","onChange","e","target","onKeyDown","event","navigate","onCompositionStart","onCompositionEnd","textField","textFieldSide","faCircleXmark","organization_type_cd","setOrganizationTypeCd","OrganizationTypeCdArray","otc"],"sourceRoot":""}