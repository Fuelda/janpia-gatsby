{"version":3,"file":"component---src-pages-search-issue-tsx-581c6c04b418eb6d5d43.js","mappings":"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","sources":["webpack://janpia-disclosure/./src/components/atoms/ResetSearchButton.tsx","webpack://janpia-disclosure/./src/components/atoms/ToResultButton.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Business/TopicKeyword.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Issue/SocialIssue.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Issue/SdgsGoal.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Issue/BusinessTypeName.tsx","webpack://janpia-disclosure/./src/pages/search/issue.tsx"],"sourcesContent":["import { faCircleXmark } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport \"twin.macro\";\nimport { useSearchContext } from \"../../context/searchContext\";\nimport { useAlgoliaStrapiContext } from \"../../context/algoliaStrapiContext\";\n\nconst ResetSearchButton = () => {\n  const { resetSearchStatus } = useSearchContext();\n\n  return (\n    <button tw=\"text-sm text-gray-border\" onClick={() => resetSearchStatus()}>\n      <FontAwesomeIcon icon={faCircleXmark} tw=\"mr-1\" />\n      検索条件をリセット\n    </button>\n  );\n};\n\nexport default ResetSearchButton;\n","import { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport \"twin.macro\";\n\nconst ToResultButton = () => {\n  return (\n    <Link\n      to=\"/result\"\n      tw=\"w-[280px] bg-blue-button text-white py-2 text-center block rounded\"\n    >\n      <FontAwesomeIcon icon={faMagnifyingGlass} tw=\"mr-3\" />\n      検索\n    </Link>\n  );\n};\n\nexport default ToResultButton;\n","import * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport React from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport {\n  OrganizationTypeCdArray,\n  topicKeywordArray,\n} from \"../../../store/filterContents\";\nimport \"twin.macro\";\nimport {\n  checkBox,\n  checkBoxList,\n  checkBoxSet,\n  checkMark,\n} from \"../../../../../styles/form\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport tw from \"twin.macro\";\n\nconst TopicKeyword = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { topic_keywords } = searchState;\n  const { setTopicKeywords } = searchSetState;\n  const checkboxArray = topicKeywordArray;\n\n  const handleCheckbox = (label: string) => {\n    if (topic_keywords.includes(label)) {\n      setTopicKeywords(topic_keywords.filter((tk) => tk !== label));\n    } else {\n      setTopicKeywords([...topic_keywords, label]);\n    }\n  };\n\n  return (\n    <div>\n      <h3 css={h3}>話題のキーワード</h3>\n      <div\n        tw=\"flex gap-y-2.5 flex-wrap px-3.5 py-2.5\"\n        css={props.path.includes(\"search\") ? tw`gap-x-14` : tw`gap-x-3`}\n      >\n        {checkboxArray.map((checkbox) => (\n          <div key={checkbox} css={[hCenter, checkBoxSet]}>\n            <Checkbox.Root\n              id={checkbox}\n              onCheckedChange={() => handleCheckbox(checkbox)}\n              css={checkBox}\n              checked={topic_keywords.includes(checkbox)}\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor={checkbox}>{checkbox}</label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TopicKeyword;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { socialIssueArray } from \"../../../store/filterContents\";\nimport * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport \"twin.macro\";\nimport { checkBox, checkBoxList, checkMark } from \"../../../../../styles/form\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport tw from \"twin.macro\";\n\nconst SocialIssue = () => {\n  const { searchState, searchSetState } = useSearchContext();\n  const isFirstRegionRender = useRef(true);\n  const isFirstAllFieldRender = useRef(true);\n\n  const {\n    field1_1,\n    field1_2,\n    field1_3,\n    field2_4,\n    field2_5,\n    field2_6,\n    field3_7,\n    field3_8,\n    region1,\n    region2,\n    region3,\n    allFieldCheck,\n  } = searchState;\n  const {\n    setField1_1,\n    setField1_2,\n    setField1_3,\n    setField2_4,\n    setField2_5,\n    setField2_6,\n    setField3_7,\n    setField3_8,\n    setRegion1,\n    setRegion2,\n    setRegion3,\n    setAllFieldCheck,\n  } = searchSetState;\n  const checkboxArray = socialIssueArray;\n\n  const handleCheckbox = (code: string) => {\n    code === \"field1_1\" && setField1_1(!field1_1);\n    code === \"field1_2\" && setField1_2(!field1_2);\n    code === \"field1_3\" && setField1_3(!field1_3);\n    code === \"field2_4\" && setField2_4(!field2_4);\n    code === \"field2_5\" && setField2_5(!field2_5);\n    code === \"field2_6\" && setField2_6(!field2_6);\n    code === \"field3_7\" && setField3_7(!field3_7);\n    code === \"field3_8\" && setField3_8(!field3_8);\n    code === \"region1\" && setRegion1(!region1);\n    code === \"region2\" && setRegion2(!region2);\n    code === \"region3\" && setRegion3(!region3);\n  };\n\n  const isChecked = (code: string) => {\n    switch (code) {\n      case \"field1_1\":\n        return field1_1;\n      case \"field1_2\":\n        return field1_2;\n      case \"field1_3\":\n        return field1_3;\n      case \"field2_4\":\n        return field2_4;\n      case \"field2_5\":\n        return field2_5;\n      case \"field2_6\":\n        return field2_6;\n      case \"field3_7\":\n        return field3_7;\n      case \"field3_8\":\n        return field3_8;\n      case \"region1\":\n        return region1;\n      case \"region2\":\n        return region2;\n      case \"region3\":\n        return region3;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    if (isFirstRegionRender.current) {\n      isFirstRegionRender.current = false;\n      return;\n    }\n\n    setField1_1(region1);\n    setField1_2(region1);\n    setField1_3(region1);\n    setField2_4(region2);\n    setField2_5(region2);\n    setField2_6(region2);\n    setField3_7(region3);\n    setField3_8(region3);\n  }, [region1, region2, region3]);\n\n  useEffect(() => {\n    if (isFirstAllFieldRender.current) {\n      isFirstAllFieldRender.current = false;\n      return;\n    }\n\n    setField1_1(allFieldCheck);\n    setField1_2(allFieldCheck);\n    setField1_3(allFieldCheck);\n    setField2_4(allFieldCheck);\n    setField2_5(allFieldCheck);\n    setField2_6(allFieldCheck);\n    setField3_7(allFieldCheck);\n    setField3_8(allFieldCheck);\n  }, [allFieldCheck]);\n\n  useEffect(() => {\n    setRegion1(field1_1 && field1_2 && field1_3);\n    setRegion2(field2_4 && field2_5 && field2_6);\n    setRegion3(field3_7 && field3_8);\n    // setAllFieldCheck(\n    //   field1_1 &&\n    //     field1_2 &&\n    //     field1_3 &&\n    //     field2_4 &&\n    //     field2_5 &&\n    //     field2_6 &&\n    //     field3_7 &&\n    //     field3_8\n    // );\n  }, [\n    field1_1,\n    field1_2,\n    field1_3,\n    field2_4,\n    field2_5,\n    field2_6,\n    field3_7,\n    field3_8,\n  ]);\n\n  return (\n    <div>\n      <h3 css={h3}>社会課題</h3>\n      <div tw=\"flex flex-col gap-2.5 px-3.5 py-2.5\">\n        <div tw=\"mt-[5px]\">\n          <div css={hCenter} tw=\"gap-2\">\n            <Checkbox.Root\n              id=\"allIssue\"\n              onCheckedChange={() => setAllFieldCheck(!allFieldCheck)}\n              css={checkBox}\n              checked={allFieldCheck}\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor=\"allIssue\">すべてにチェック</label>\n          </div>\n        </div>\n        {checkboxArray.map((checkbox) => (\n          <div\n            key={checkbox.code}\n            css={checkbox.code.includes(\"field\") ? tw`ml-[30px]` : tw`mt-[5px]`}\n          >\n            <div css={hCenter} tw=\"gap-2\">\n              <Checkbox.Root\n                id={checkbox.code}\n                onCheckedChange={() => handleCheckbox(checkbox.code)}\n                css={checkBox}\n                checked={isChecked(checkbox.code)}\n              >\n                <Checkbox.Indicator tw=\"flex justify-center\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"15.003\"\n                    height=\"11.252\"\n                    viewBox=\"0 0 15.003 11.252\"\n                    css={checkMark}\n                  >\n                    <path\n                      id=\"check\"\n                      d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                      transform=\"translate(-294.999 -123.908)\"\n                    />\n                  </svg>\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n              <label htmlFor={checkbox.code}>{checkbox.label}</label>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SocialIssue;\n","import React from \"react\";\nimport { sdgsGoalArray } from \"../../../store/filterContents\";\nimport * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport \"twin.macro\";\nimport { checkBox, checkBoxList, checkMark } from \"../../../../../styles/form\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport tw from \"twin.macro\";\n\nconst SdgsGoal = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { sdgs_goal } = searchState;\n  const { setSdgsGoal } = searchSetState;\n  const checkboxArray = sdgsGoalArray;\n\n  const handleCheckbox = (code: string) => {\n    if (sdgs_goal.includes(code)) {\n      setSdgsGoal(sdgs_goal.filter((sg) => sg !== code));\n    } else {\n      setSdgsGoal([...sdgs_goal, code]);\n    }\n  };\n\n  const handleAllSdgs = () => {\n    allSdgs.every((sdgs) => sdgs_goal.includes(sdgs))\n      ? setSdgsGoal([])\n      : setSdgsGoal(allSdgs);\n  };\n\n  const allSdgs = sdgsGoalArray.map((sdgs) => sdgs.code);\n\n  return (\n    <div>\n      <h3 css={h3}>SDGs</h3>\n      <div>\n        <div tw=\"mt-[5px] px-3.5 pt-2.5\">\n          <div css={hCenter} tw=\"gap-2\">\n            <Checkbox.Root\n              id=\"allSdgs\"\n              onCheckedChange={handleAllSdgs}\n              css={checkBox}\n              checked={\n                sdgs_goal.sort().toString() === allSdgs.sort().toString()\n              }\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor=\"allSdgs\">すべてにチェック</label>\n          </div>\n        </div>\n        <div\n          tw=\"gap-y-2.5 px-3.5 py-2.5\"\n          css={\n            props.path === \"search\"\n              ? tw`grid grid-cols-3 lg:(flex flex-col)`\n              : tw`flex flex-col`\n          }\n        >\n          {checkboxArray.map((checkbox) => (\n            <div key={checkbox.code} css={hCenter} tw=\"gap-1.5\">\n              <Checkbox.Root\n                id={checkbox.code}\n                onCheckedChange={() => handleCheckbox(checkbox.code)}\n                css={checkBox}\n                checked={sdgs_goal.includes(checkbox.code)}\n              >\n                <Checkbox.Indicator tw=\"flex justify-center\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"15.003\"\n                    height=\"11.252\"\n                    viewBox=\"0 0 15.003 11.252\"\n                    css={checkMark}\n                  >\n                    <path\n                      id=\"check\"\n                      d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                      transform=\"translate(-294.999 -123.908)\"\n                    />\n                  </svg>\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n              <label htmlFor={checkbox.code}>{checkbox.label}</label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SdgsGoal;\n","import * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport { useStrapiContext } from \"../../../../../context/strapiContext\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport {\n  checkBox,\n  checkBoxList,\n  checkBoxSet,\n  checkMark,\n} from \"../../../../../styles/form\";\nimport \"twin.macro\";\nimport tw from \"twin.macro\";\n\nconst BusinessTypeName = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { allStrapiBizPlan, allStrapiBizPlanManual } = useStrapiContext();\n  const { btnYear, btnCategory } = searchState;\n  const { setBtnYear, setBtnCategory } = searchSetState;\n\n  const businessTypeNameYear = allStrapiBizPlan.edges.map(\n    (item) => item.node.business_type_name || \"\"\n  );\n  const businessTypeNameYearManual = allStrapiBizPlanManual.edges.map(\n    (item) => item.node.business_type_name?.label || \"\"\n  );\n  const businessTypeNameYearSum = [\n    ...businessTypeNameYear,\n    ...businessTypeNameYearManual,\n  ];\n  const uniqueBusinessTypeNameYear = [...new Set(businessTypeNameYearSum)];\n  const regexPattern = /\\d{4}年度/g;\n  const yearBusinessTypeNameYear = uniqueBusinessTypeNameYear.map((item) => {\n    const matches = item?.match(regexPattern);\n    return matches ? matches[0] : item;\n  });\n  const uniqueYearBusinessTypeNameYear = [\n    ...new Set(yearBusinessTypeNameYear),\n  ].sort((a, b) => {\n    return b.localeCompare(a);\n  });\n\n  const businessTypeNameCategory = [\"通常枠\", \"コロナ枠\"];\n\n  const handleCategoryCheckbox = (label: string) => {\n    if (btnCategory.includes(label)) {\n      setBtnCategory(btnCategory.filter((btny) => btny !== label));\n    } else {\n      setBtnCategory([...btnCategory, label]);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h3 css={h3}>事業枠</h3>\n        <div\n          tw=\"flex gap-y-2.5 flex-wrap px-3.5 py-2.5\"\n          css={props.path.includes(\"search\") ? tw`gap-x-14` : tw`gap-x-3`}\n        >\n          {businessTypeNameCategory.map((checkbox) => (\n            <div key={checkbox} css={[hCenter, checkBoxSet]}>\n              <Checkbox.Root\n                id={checkbox}\n                onClick={() => handleCategoryCheckbox(checkbox)}\n                css={checkBox}\n                checked={btnCategory.includes(checkbox)}\n              >\n                <Checkbox.Indicator tw=\"flex justify-center\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"15.003\"\n                    height=\"11.252\"\n                    viewBox=\"0 0 15.003 11.252\"\n                    css={checkMark}\n                  >\n                    <path\n                      id=\"check\"\n                      d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                      transform=\"translate(-294.999 -123.908)\"\n                    />\n                  </svg>\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n              <label htmlFor={checkbox}>\n                {(checkbox === \"通常枠\" && \"通常枠\") ||\n                  (checkbox === \"コロナ枠\" && \"緊急支援枠\")}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BusinessTypeName;\n","import React, { useEffect } from \"react\";\nimport Layout from \"../../components/lauout/Layout\";\nimport \"twin.macro\";\nimport { h3, hCenter, pankuzu, vCenter } from \"../../styles/base\";\nimport ToResultButton from \"../../components/atoms/ToResultButton\";\nimport ResetSearchButton from \"../../components/atoms/ResetSearchButton\";\nimport { Link } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport TopicKeyword from \"../../features/search/component/main/Business/TopicKeyword\";\nimport SocialIssue from \"../../features/search/component/main/Issue/SocialIssue\";\nimport SdgsGoal from \"../../features/search/component/main/Issue/SdgsGoal\";\nimport { useSearchContext } from \"../../context/searchContext\";\nimport BusinessTypeName from \"../../features/search/component/main/Issue/BusinessTypeName\";\nimport { useLocation } from \"@reach/router\";\nimport Seo from \"../../components/lauout/Seo\";\n\nconst Issue = () => {\n  const { resetSearchStatus } = useSearchContext();\n  const location = useLocation();\n  const path = location.pathname;\n\n  useEffect(() => {\n    resetSearchStatus();\n  }, []);\n\n  return (\n    <Layout>\n      <Seo title=\"社会課題から探す | 休眠預金活用事業 情報公開サイト\" />\n      <div tw=\"mb-32\">\n        <div css={pankuzu}>\n          <Link to=\"/\">ホーム</Link>\n          <FontAwesomeIcon icon={faAngleRight} />\n          <p>社会課題から探す</p>\n        </div>\n        <h2 tw=\"text-xl py-6 px-3.5 font-bold\">社会課題から探す</h2>\n        <div css={vCenter} tw=\"gap-11\">\n          <div>\n            <BusinessTypeName path={path} />\n            <SocialIssue />\n            <SdgsGoal path=\"search\" />\n            <TopicKeyword path=\"search\" />\n          </div>\n          <div css={vCenter} tw=\"gap-6\">\n            <ToResultButton />\n            <ResetSearchButton />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Issue;\n"],"names":["resetSearchStatus","useSearchContext","___EmotionJSX","onClick","FontAwesomeIcon","icon","faCircleXmark","Link","to","faMagnifyingGlass","props","searchState","searchSetState","topic_keywords","setTopicKeywords","checkboxArray","topicKeywordArray","path","includes","map","checkbox","key","hCenter","checkBoxSet","id","onCheckedChange","handleCheckbox","label","filter","tk","checked","Checkbox","xmlns","width","height","viewBox","d","transform","htmlFor","h3","checkBox","checkMark","isFirstRegionRender","useRef","isFirstAllFieldRender","field1_1","field1_2","field1_3","field2_4","field2_5","field2_6","field3_7","field3_8","region1","region2","region3","allFieldCheck","setField1_1","setField1_2","setField1_3","setField2_4","setField2_5","setField2_6","setField3_7","setField3_8","setRegion1","setRegion2","setRegion3","setAllFieldCheck","socialIssueArray","isChecked","code","useEffect","current","sdgs_goal","setSdgsGoal","sdgsGoalArray","allSdgs","sdgs","every","sort","toString","sg","allStrapiBizPlan","allStrapiBizPlanManual","useStrapiContext","btnYear","btnCategory","setBtnYear","setBtnCategory","businessTypeNameYear","edges","item","node","business_type_name","businessTypeNameYearManual","_item$node$business_t","businessTypeNameYearSum","uniqueBusinessTypeNameYear","Set","regexPattern","yearBusinessTypeNameYear","matches","match","_toConsumableArray","a","b","localeCompare","handleCategoryCheckbox","btny","name","styles","useLocation","pathname","Layout","Seo","title","css","faAngleRight","BusinessTypeName","SocialIssue","SdgsGoal","TopicKeyword","ToResultButton","ResetSearchButton","displayName","componentId","pankuzu","vCenter"],"sourceRoot":""}