{"version":3,"file":"component---src-pages-search-organization-tsx-167de756ae08740ae3c2.js","mappings":"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","sources":["webpack://janpia-disclosure/./src/components/atoms/ResetSearchButton.tsx","webpack://janpia-disclosure/./src/components/atoms/ToResultButton.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Organization/LegalPersonality.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Organization/OrganizationName.tsx","webpack://janpia-disclosure/./src/hooks/useDebounce.ts","webpack://janpia-disclosure/./src/features/search/component/main/Organization/OrganizationTypeCd.tsx","webpack://janpia-disclosure/./src/features/search/component/main/Organization/PrefecturesSp.tsx","webpack://janpia-disclosure/./src/pages/search/organization.tsx"],"sourcesContent":["import { faCircleXmark } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport \"twin.macro\";\nimport { useSearchContext } from \"../../context/searchContext\";\nimport { useAlgoliaStrapiContext } from \"../../context/algoliaStrapiContext\";\n\nconst ResetSearchButton = () => {\n  const { resetSearchStatus } = useSearchContext();\n\n  return (\n    <button tw=\"text-sm text-gray-border\" onClick={() => resetSearchStatus()}>\n      <FontAwesomeIcon icon={faCircleXmark} tw=\"mr-1\" />\n      検索条件をリセット\n    </button>\n  );\n};\n\nexport default ResetSearchButton;\n","import { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport \"twin.macro\";\n\nconst ToResultButton = () => {\n  return (\n    <Link\n      to=\"/result\"\n      tw=\"w-[280px] bg-blue-button text-white py-2 text-center block rounded\"\n    >\n      <FontAwesomeIcon icon={faMagnifyingGlass} tw=\"mr-3\" />\n      検索\n    </Link>\n  );\n};\n\nexport default ToResultButton;\n","import * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport React from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport { legalPersonalityArray } from \"../../../store/filterContents\";\nimport { checkBox, checkBoxSet, checkMark } from \"../../../../../styles/form\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport \"twin.macro\";\nimport tw from \"twin.macro\";\n\nconst legalPersonalityLabelArray = [\n  { code: [1, 2], label: \"NPO法人\" },\n  { code: [12], label: \"株式会社\" },\n  { code: [3, 7], label: \"社団法人\" },\n  { code: [4, 8], label: \"財団法人\" },\n  { code: [20], label: \"社会福祉法人\" },\n  { code: [14], label: \"更生保護法人\" },\n  { code: [24], label: \"任意団体\" },\n  { code: [99], label: \"その他\" },\n];\n\nconst LegalPersonality = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { legal_personality } = searchState;\n  const { setLegalPersonality } = searchSetState;\n  const checkboxArray = legalPersonalityArray;\n\n  const handleCheckbox = (code: number[]) => {\n    if (legal_personality.includes(code[0])) {\n      setLegalPersonality(legal_personality.filter((lp) => !code.includes(lp)));\n    } else {\n      setLegalPersonality([...legal_personality, ...code]);\n    }\n  };\n\n  return (\n    <div>\n      <h3 css={h3}>法人格</h3>\n      <div\n        tw=\"flex gap-y-2.5 flex-wrap px-3.5 py-2.5\"\n        css={props.path.includes(\"/search/\") ? tw`gap-x-14` : tw`gap-x-3`}\n      >\n        {legalPersonalityLabelArray.map((checkbox) => (\n          <div key={checkbox.label} css={[hCenter, checkBoxSet]}>\n            <Checkbox.Root\n              id={String(checkbox.code)}\n              onCheckedChange={() => handleCheckbox(checkbox.code)}\n              css={checkBox}\n              checked={legal_personality.includes(checkbox.code[0])}\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor={String(checkbox.code)} tw=\"\">\n              {checkbox.label}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LegalPersonality;\n","import React, { useEffect, useState } from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport { textField, textFieldSide } from \"../../../../../styles/form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-regular-svg-icons\";\nimport \"twin.macro\";\nimport { h3 } from \"../../../../../styles/base\";\nimport { navigate } from \"gatsby\";\nimport { useDebounce } from \"../../../../../hooks/useDebounce\";\n\nconst OrganizationName = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { organization_name } = searchState;\n  const { setOrganizationName } = searchSetState;\n  const [organizationNameInput, setOrganizationNameInput] =\n    useState(organization_name);\n  const [isComposing, setIsComposing] = useState(false);\n  const debouncedOrganizationName = useDebounce(organizationNameInput, 500);\n\n  useEffect(() => {\n    setOrganizationName(debouncedOrganizationName);\n  }, [debouncedOrganizationName]);\n\n  const handleEnterKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\" && !isComposing) {\n      navigate(\"/result\");\n    }\n  };\n\n  return (\n    <div>\n      <h3 css={h3}>団体名</h3>\n      <div tw=\"relative px-3.5 py-2.5\">\n        <input\n          type=\"text\"\n          css={props.path.includes(\"search\") ? textField : textFieldSide}\n          placeholder=\"団体名を入力してください\"\n          value={organizationNameInput}\n          onChange={(e) => setOrganizationNameInput(e.target.value)}\n          onKeyDown={handleEnterKeyDown}\n          onCompositionStart={() => setIsComposing(true)}\n          onCompositionEnd={() => setIsComposing(false)}\n        />\n        <button\n          tw=\"absolute top-1/2 transform -translate-y-1/2 right-8\"\n          onClick={() => setOrganizationNameInput(\"\")}\n        >\n          <FontAwesomeIcon icon={faCircleXmark} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OrganizationName;\n","import { useEffect, useState } from \"react\";\n\nexport const useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","import * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport React from \"react\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\nimport { OrganizationTypeCdArray } from \"../../../store/filterContents\";\nimport \"twin.macro\";\nimport { h3, hCenter } from \"../../../../../styles/base\";\nimport {\n  checkBox,\n  checkBoxList,\n  checkBoxSet,\n  checkMark,\n} from \"../../../../../styles/form\";\nimport tw from \"twin.macro\";\n\nconst OrganizationTypeCd = (props: { path: string }) => {\n  const { searchState, searchSetState } = useSearchContext();\n  const { organization_type_cd } = searchState;\n  const { setOrganizationTypeCd } = searchSetState;\n  const checkboxArray = OrganizationTypeCdArray;\n\n  const handleCheckbox = (code: string) => {\n    if (organization_type_cd.includes(code)) {\n      setOrganizationTypeCd(organization_type_cd.filter((otc) => otc !== code));\n    } else {\n      setOrganizationTypeCd([...organization_type_cd, code]);\n    }\n  };\n\n  return (\n    <div>\n      <h3 css={h3}>団体種別</h3>\n      <div\n        tw=\"flex gap-y-2.5 flex-wrap px-3.5 py-2.5\"\n        css={props.path.includes(\"search\") ? tw`gap-x-14` : tw`gap-x-3`}\n      >\n        {checkboxArray.map((checkbox) => (\n          <div key={checkbox.code} css={[hCenter, checkBoxSet]}>\n            <Checkbox.Root\n              id={checkbox.code}\n              onCheckedChange={() => handleCheckbox(checkbox.code)}\n              css={checkBox}\n              checked={organization_type_cd.includes(checkbox.code)}\n            >\n              <Checkbox.Indicator tw=\"flex justify-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15.003\"\n                  height=\"11.252\"\n                  viewBox=\"0 0 15.003 11.252\"\n                  css={checkMark}\n                >\n                  <path\n                    id=\"check\"\n                    d=\"M300.625,135.16l-1.876-1.876h0L295,129.533l1.875-1.875,3.751,3.751,7.5-7.5L310,125.783Z\"\n                    transform=\"translate(-294.999 -123.908)\"\n                  />\n                </svg>\n              </Checkbox.Indicator>\n            </Checkbox.Root>\n            <label htmlFor={checkbox.code}>{checkbox.label}</label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default OrganizationTypeCd;\n","import React from \"react\";\nimport \"twin.macro\";\nimport { h3, vCenter } from \"../../../../../styles/base\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { useModalContext } from \"../../../../../context/modalContext\";\nimport { useSearchContext } from \"../../../../../context/searchContext\";\n\nconst PrefecturesSp = (props: { category: string }) => {\n  const { setIsModalOpen } = useModalContext();\n  const { searchState } = useSearchContext();\n  const { prefectures, target_area } = searchState;\n  const prefecturesText =\n    props.category === \"prefectures\"\n      ? prefectures.join(\" / \")\n      : target_area.join(\" / \");\n\n  return (\n    <div tw=\"hidden lg:block\">\n      <h3 css={h3}>\n        {props.category === \"prefectures\" ? \"団体所在地\" : \"事業対象地域\"}\n      </h3>\n      <div tw=\"px-3.5 py-2.5\">\n        <p>選択した地域：{prefecturesText}</p>\n        <button\n          css={vCenter}\n          tw=\"mt-3 border border-blue-button rounded py-2.5 w-full\"\n          onClick={() => {\n            props.category === \"prefectures\"\n              ? setIsModalOpen(\"prefecturesSp\")\n              : setIsModalOpen(\"targetAreaSp\");\n          }}\n        >\n          <div tw=\"flex gap-2.5\">\n            <StaticImage\n              src=\"../../../../../images/map-icon.svg\"\n              alt=\"マップアイコン\"\n              tw=\"w-[21.65px]\"\n            />\n            <p tw=\"text-blue-button font-bold\">\n              {props.category === \"prefectures\" ? \"団体所在地\" : \"活動地域\"}\n              を選択する\n            </p>\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PrefecturesSp;\n","import React, { useEffect } from \"react\";\nimport Layout from \"../../components/lauout/Layout\";\nimport \"twin.macro\";\nimport { h3, hCenter, pankuzu, vCenter } from \"../../styles/base\";\nimport OrganizationName from \"../../features/search/component/main/Organization/OrganizationName\";\nimport OrganizationTypeCd from \"../../features/search/component/main/Organization/OrganizationTypeCd\";\nimport LegalPersonality from \"../../features/search/component/main/Organization/LegalPersonality\";\nimport ToResultButton from \"../../components/atoms/ToResultButton\";\nimport ResetSearchButton from \"../../components/atoms/ResetSearchButton\";\nimport Prefectures from \"../../features/search/component/main/Organization/Prefectures\";\nimport { Link } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSearchContext } from \"../../context/searchContext\";\nimport { useLocation } from \"@reach/router\";\nimport PrefecturesSp from \"../../features/search/component/main/Organization/PrefecturesSp\";\nimport Seo from \"../../components/lauout/Seo\";\n\nconst Organization = () => {\n  const { resetSearchStatus } = useSearchContext();\n  const location = useLocation();\n  const path = location.pathname;\n\n  useEffect(() => {\n    resetSearchStatus();\n  }, []);\n\n  return (\n    <Layout>\n      <Seo title=\"団体から探す | 休眠預金活用事業 情報公開サイト\" />\n      <div tw=\"mb-32\">\n        <div css={pankuzu}>\n          <Link to=\"/\">ホーム</Link>\n          <FontAwesomeIcon icon={faAngleRight} />\n          <p>団体から探す</p>\n        </div>\n        <h2 tw=\"text-xl py-6 px-3.5 font-bold\">団体から探す</h2>\n        <div css={vCenter} tw=\"relative\">\n          <div>\n            <OrganizationName path={path} />\n            <OrganizationTypeCd path={path} />\n\n            <h3 css={h3} tw=\"lg:(hidden)\">\n              団体所在地\n            </h3>\n            <div tw=\"px-11 py-4 lg:(hidden)\">\n              <Prefectures />\n            </div>\n            <div tw=\"hidden lg:(block)\">\n              <PrefecturesSp category=\"prefectures\" />\n            </div>\n\n            <LegalPersonality path={path} />\n          </div>\n          <div tw=\"sticky bottom-16 mt-11\">\n            <ToResultButton />\n          </div>\n          <div tw=\"mt-6\">\n            <ResetSearchButton />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Organization;\n"],"names":["resetSearchStatus","useSearchContext","___EmotionJSX","onClick","FontAwesomeIcon","icon","faCircleXmark","Link","to","faMagnifyingGlass","legalPersonalityLabelArray","code","label","props","searchState","searchSetState","legal_personality","setLegalPersonality","legalPersonalityArray","path","includes","map","checkbox","key","hCenter","checkBoxSet","id","String","onCheckedChange","handleCheckbox","filter","lp","checked","Checkbox","xmlns","width","height","viewBox","d","transform","htmlFor","h3","checkBox","checkMark","organization_name","setOrganizationName","organizationNameInput","setOrganizationNameInput","useState","isComposing","setIsComposing","debouncedOrganizationName","value","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","type","placeholder","onChange","e","target","onKeyDown","event","navigate","onCompositionStart","onCompositionEnd","textField","textFieldSide","organization_type_cd","setOrganizationTypeCd","checkboxArray","OrganizationTypeCdArray","otc","setIsModalOpen","useModalContext","prefectures","target_area","prefecturesText","category","join","StaticImage","src","alt","vCenter","name","styles","useLocation","pathname","Layout","Seo","title","css","faAngleRight","OrganizationName","OrganizationTypeCd","Prefectures","PrefecturesSp","LegalPersonality","ToResultButton","ResetSearchButton","displayName","componentId","pankuzu"],"sourceRoot":""}